entity ALU_unit is -- ALU unit includes Reg. 3
    port (
        clk, res : in std_logic;
        Reg1, Reg2 : in std_logic_vector(7 downto 0); -- 8-bit inputs A & B from Reg. 1 & Reg. 2
        opcode : in std_logic_vector(7 downto 0); -- 8-bit opcode from Decoder
        Result : out std_logic_vector(7 downto 0) -- 8-bit Result
    );
end ALU_unit;

architecture calculation of ALU_unit is
begin
    process (clk, res)
    begin
        if reset = '1' then
            Result <= "00000000";
        elsif (clk'EVENT AND clk = '1') then
            case opcode is
                when "00000001" =>
                    -- Do addition for Reg1 and Reg2
                when "00000010" =>
                    -- Do subtraction for Reg1 and Reg2
                when "00000100" =>
                    -- Do inverse
                when "00001000" =>
                    -- Do Boolean NAND
                when "00010000" =>
                    -- Do Boolean NOR
                when "00100000" =>
                    -- Do Boolean AND
                when "01000000" =>
                    -- Do Boolean XOR
                when "10000000" =>
                    -- Do Boolean OR
                when others =>
                    -- Don't care, do nothing
            end case;
        end if;
    end process;
end calculation;
